shiny::runApp('C:/Users/mcherrie/Google Drive/ProjectFiles/CRESHwebmap/webmap')
getwd()
setwd("C:/Users/mcherrie/Google Drive/ProjectFiles/AFS_MC/AFS_onchanges/working")
agesex<-read.csv("data/auxi/agesex.csv")
knitr::opts_chunk$set(echo = TRUE)
#' Setup workspace
setwd("C:/Users/mcherrie/Google Drive/ProjectFiles/AFS_MC/AFS_onchanges/working")
agesex<-read.csv("data/auxi/agesex.csv")
agesex_wide<-reshape(agesex, idvar = "DataZone2011", timevar = "sex", direction = "wide")
agesex_wide$Mchildren<-with(agesex_wide, ageg04.M+ ageg1014.M + ageg1519.M)
agesex_wide$MAdult<-with(agesex_wide, ageg2024.M+ ageg2529.M + ageg3034.M + ageg3539.M+ ageg4044.M + ageg4549.M + ageg5054.M+ ageg5559.M)
agesex_wide$MOldAdult<-with(agesex_wide, ageg6064.M+ ageg6569.M + ageg7074.M +  ageg7579.M +  ageg8084.M +  ageg8589.M +  ageg90plus.M)
agesex_wide$Fchildren<-with(agesex_wide, ageg04.F+ ageg1014.F + ageg1519.F)
agesex_wide$FAdult<-with(agesex_wide, ageg2024.F+ ageg2529.F + ageg3034.F + ageg3539.F+ ageg4044.F + ageg4549.F + ageg5054.F+ ageg5559.F)
agesex_wide$FOldAdult<-with(agesex_wide, ageg6064.F+ ageg6569.F + ageg7074.F +  ageg7579.F +  ageg8084.F +  ageg8589.F +  ageg90plus.F)
library(gtools)
library(car)
library(plyr)
library(dplyr)
library(knitr)
Scotland<-readRDS("C:/Users/mcherrie/Google Drive/ProjectFiles/CRESHwebmap/alcoholtobacco/geography/DZ/la/Scotland.rds")
file.info(Scotland)
object.size(Scotland)
library(rgeos)
Scotland2<-gSimplify(Scotland, 3)
object.size(Scotland2)
Scotland2<-gSimplify(Scotland, 30)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 100)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 1000)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 100)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 120)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 190)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 220)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 290)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 350)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 500)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 400)
object.size(Scotland2)
plot(Scotland2)
Scotland2<-gSimplify(Scotland, 400, topologyPreserve = T)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 9000, topologyPreserve = T)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 900, topologyPreserve = T)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 500, topologyPreserve = F)
object.size(Scotland2)
plot(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 100, topologyPreserve = F)
object.size(Scotland2)
plot(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 300, topologyPreserve = F)
object.size(Scotland2)
plot(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 300, topologyPreserve = T)
object.size(Scotland2)
object.size(Scotland)
library(rgeos)
Scotland2<-gSimplify(Scotland, 300, topologyPreserve = T)
object.size(Scotland2)
plot(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 1000, topologyPreserve = T)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 1500, topologyPreserve = T)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 15000, topologyPreserve = T)
object.size(Scotland2)
library(rgeos)
Scotland2<-gSimplify(Scotland, 14000, topologyPreserve = T)
object.size(Scotland2)
writeOGR(Scotland2, "C:/Users/mcherrie/Downloads/testOGR/", "ESRI Shapefile")
library(rgdal)
writeOGR(Scotland2, "C:/Users/mcherrie/Downloads/testOGR/", "ESRI Shapefile")
writeOGR(Scotland2, "C:/Users/mcherrie/Downloads/testOGR/", driver="ESRI Shapefile")
writeOGR(Scotland2, "C:/Users/mcherrie/Downloads/testOGR/", "Scotland2.shp", driver="ESRI Shapefile")
saveRDS(Scotland2,"C:/Users/mcherrie/Downloads/testOGR/Scotland2.rds")
Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =Scotland@data)
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR/", "Scotland2.shp", driver="ESRI Shapefile")
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR/", "Scotland2", driver="ESRI Shapefile")
?writeOGR
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR", "Scotland2", driver="ESRI Shapefile")
library(rgeos)
Scotland2<-gSimplify(Scotland, 140, topologyPreserve = T)
object.size(Scotland2)
spdf <- SpatialPolygonsDataFrame(Scotland2, data =Scotland@data)
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR", "Scotland2", driver="ESRI Shapefile")
spdf <- SpatialPolygonsDataFrame(Scotland2, data =Scotland@data)
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR", "Scotland2", driver="ESRI Shapefile")
library(rgeos)
Scotland2<-gSimplify(Scotland, 10, topologyPreserve = T)
object.size(Scotland2)
object.size(Scotland)
object.size(Scotland2)
saveRDS(Scotland2,"C:/Users/mcherrie/Downloads/testOGR/Scotland2.rds")
spdf <- SpatialPolygonsDataFrame(Scotland2, data =Scotland@data)
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR", "Scotland2", driver="ESRI Shapefile")
library(rgeos)
Scotland2<-gSimplify(Scotland, 20, topologyPreserve = T)
object.size(Scotland2)
saveRDS(Scotland2,"C:/Users/mcherrie/Downloads/testOGR/Scotland2.rds")
spdf <- SpatialPolygonsDataFrame(Scotland2, data =Scotland@data)
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR", "Scotland2", driver="ESRI Shapefile")
spdf <- SpatialPolygonsDataFrame(Scotland2, data =Scotland@data)
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR", "Scotland2", driver="ESRI Shapefile")
saveRDS(Scotland2,"C:/Users/mcherrie/Downloads/testOGR/Scotland2.rds")
readRDS((Scotland2,"C:/Users/mcherrie/Downloads/testOGR/Scotland2.rds"))
scotland<-readRDS(Scotland2,"C:/Users/mcherrie/Downloads/testOGR/Scotland2.rds")
scotland<-readRDS("C:/Users/mcherrie/Downloads/testOGR/Scotland2.rds")
scotland<-readRDS("C:/Users/mcherrie/Downloads/testOGR/Scotland.rds")
scotland<-readRDS("C:/Users/mcherrie/Downloads/testOGR/Scotland.rds")
scotlandold<-readRDS("C:/Users/mcherrie/Downloads/testOGR/ScotlandOLD.rds")
View(scotlandold)
View(Scotland2)
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland3.rds")
subset <- Scotland@data
subset
names(subset)
subset<- subset(subset, select=c("Council", "datazone", "name", "Councilname"))
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland3.rds")
subset <- Scotland@data
library(rgeos)
Scotland2<-gSimplify(Scotland, 20, topologyPreserve = T)
object.size(Scotland2)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data[3:15]<-NA
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data[4:15]<-NA
object.size(Scotland2)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data[4:15]<-NA
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland3.rds")
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.05)
plot(Scotland2)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.01)
object.size(Scotland2)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.005)
object.size(Scotland2)
plot(Scotland2)
plot(Scotland)
plot(Scotland2)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data[4:15]<-NA
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.05)
object.size(Scotland2)
object.size(Scotland)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.1)
object.size(Scotland2)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.4)
object.size(Scotland2)
object.size(Scotland)
Scotland2<-gSimplify(Scotland, 20, topologyPreserve = T)
object.size(Scotland2)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.01)
object.size(Scotland2)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.01, keep_shapes=T)
object.size(Scotland2)
plot(Scotland2)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.0001, keep_shapes=T)
object.size(Scotland2)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data[4:15]<-NA
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland3.rds")
Scotland<-readRDS("C:/Users/mcherrie/Downloads/testOGR/ScotlandOLD3.rds")
object.size(Scotland)
View(Scotland)
View(spdf)
subset <- Scotland@data
head(subset)
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data[4:9]<-NA
spdf@data[11:15]<-NA
spdf
object.size(spdf)
object.size(Scotland)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.01, keep_shapes=T)
object.size(Scotland2)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
object.size(spdf)
spdf
subset
Scotland<-readRDS("C:/Users/mcherrie/Downloads/testOGR/ScotlandOLD3.rds")
object.size(Scotland)
subset <- Scotland@data
subset
Scotland<-readRDS("C:/Users/mcherrie/Downloads/testOGR/ScotlandOLD.rds")
object.size(Scotland)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.01, keep_shapes=T)
object.size(Scotland2)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
object.size(spdf)
head(spdf@data)
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland3.rds")
setwd("~/")
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.01, keep_shapes=T)
object.size(Scotland2)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data[4:9]<-NA
spdf@data[11:15]<-NA
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland3.rds")
spdf
View(spdf)
plot(spdf)
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland3.rds")
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.01, keep_shapes=T)
object.size(Scotland2)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data
object.size(spdf)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
object.size(spdf)
spdf@data[4:9]<-NA
spdf@data[11:15]<-NA
object.size(spdf)
spdf@data
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
spdf@data[4:10]<-NA
spdf@data[12:15]<-NA
object.size(spdf)
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland3.rds")
Scotland<-readRDS("C:/Users/mcherrie/Downloads/testOGR/ScotlandOLD.rds")
object.size(Scotland)
#library(rgeos)
#Scotland2<-gSimplify(Scotland, 20, topologyPreserve = T)
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.01, keep_shapes=T)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
object.size(spdf)
spdf@data
names(sodf)
names(spdf)
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
object.size(spdf)
spdf@data[4:10]<-NA
spdf@data[12:15]<-NA
spdf@data
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland.rds")
writeOGR(spdf, "C:/Users/mcherrie/Downloads/testOGR", "Scotland3", driver="ESRI Shapefile")
shiny::runApp('C:/Users/mcherrie/Google Drive/ProjectFiles/CRESHwebmap/alcoholtobacco')
Scotland2 <- rmapshaper::ms_simplify(Scotland, keep = 0.2, keep_shapes=T)
subset <- Scotland@data
spdf <- SpatialPolygonsDataFrame(Scotland2, data =subset)
object.size(spdf)
spdf@data[4:10]<-NA
spdf@data[12:15]<-NA
saveRDS(spdf,"C:/Users/mcherrie/Downloads/testOGR/Scotland.rds")
library(shiny)
library(shinyjs)
source("helpers.R") # Load all the code needed to show feedback on a button click
ui <- fluidPage(
useShinyjs(),
tags$style(appCSS),
selectInput("select", "Select an option",
c("This one is okay" = "ok",
"This will give an error" = "error")),
# Wrap the button in the function `withBusyIndicatorUI()`
withBusyIndicatorUI(
actionButton(
"uploadFilesBtn",
"Process data",
class = "btn-primary"
)
)
)
server <- function(input, output, session) {
observeEvent(input$uploadFilesBtn, {
# When the button is clicked, wrap the code in a call to `withBusyIndicatorServer()`
withBusyIndicatorServer("uploadFilesBtn", {
Sys.sleep(1)
if (input$select == "error") {
stop("choose another option")
}
})
})
}
shinyApp(ui = ui, server = server)
runApp('C:/Users/mcherrie/Google Drive/ProjectFiles/CRESHwebmap/alcoholtobacco')
install.packages("sweetalert")
library(sweetalertR)
install.packages("sweetalertR")
install_github("timelyportfolio/sweetalertR")
library(devtools)
install_github("timelyportfolio/sweetalertR")
devtools::install_github("timelyportfolio/sweetalertR")
install_github("timelyportfolio/sweetalertR", dependencies = TRUE)
devtools::install_github("timelyportfolio/sweetalertR")
tempdir()
setwd("C:\\Users\\mcherrie\\Downloads\\sweetalertR-master")
devtools::install("sweetalertR-master")
library(sweetalertR)
runApp('C:/Users/mcherrie/Google Drive/ProjectFiles/CRESHwebmap/alcoholtobacco')
library(sweetalertR)
sweetalert(
selector = '.showcase.sweet button',
title = "Oops...",
text = "Something went wrong!",
type = "error"
)
sweetalert()
?sweetalert
browsable(tagList(
HTML('
<div class="showcase sweet">
<h4>Sweet Alert</h4>
<button>Show error message</button>
<h5>R Code:</h5>
<pre>
sweetalert(
selector = ".showcase.sweet button"
,title = "Oops..."
,text =  "Something went wrong!"
,type = "error"
)
</pre>
</div>
')
,sweetalert(
selector = '.showcase.sweet button'
,title = "Oops..."
,text =  "Something went wrong!"
,type = "error"
)
))
# do the first sweetalert example using a tagList
#   but with sweetalert( selector = NULL )
#   assuming someone knows HTML and JavaScript
browsable(tagList(
HTML('
<div class="showcase sweet">
<h4>Sweet Alert</h4>
<button onclick = "sweetAlert( \'Oops...\',\'Something went wrong!\',\'error\')">
Show error message
</button>
<h5>R Code:</h5>
<pre>
# no selector so sweetalert htmlwidget just used for dependencies
sweetalert()
</pre>
</div>
')
,sweetalert()
))
library(sweetalertR)
library(htmltools)
browsable(tagList(
HTML('
<div class="showcase sweet">
<h4>Sweet Alert</h4>
<button>Show error message</button>
<h5>R Code:</h5>
<pre>
sweetalert(
selector = ".showcase.sweet button"
,title = "Oops..."
,text =  "Something went wrong!"
,type = "error"
)
</pre>
</div>
')
,sweetalert(
selector = '.showcase.sweet button'
,title = "Oops..."
,text =  "Something went wrong!"
,type = "error"
)
))
# do the first sweetalert example using a tagList
#   but with sweetalert( selector = NULL )
#   assuming someone knows HTML and JavaScript
browsable(tagList(
HTML('
<div class="showcase sweet">
<h4>Sweet Alert</h4>
<button onclick = "sweetAlert( \'Oops...\',\'Something went wrong!\',\'error\')">
Show error message
</button>
<h5>R Code:</h5>
<pre>
# no selector so sweetalert htmlwidget just used for dependencies
sweetalert()
</pre>
</div>
')
,sweetalert()
))
runApp('C:/Users/mcherrie/Google Drive/ProjectFiles/CRESHwebmap/alcoholtobacco')
runApp('C:/Users/mcherrie/Google Drive/ProjectFiles/CRESHwebmap/alcoholtobacco')
income<-read.csv("C:/Users/mcherrie/Downloads/datazone2001_simd2012.csv")
View(income)
names(income)
income<-subset(income, select=c("DataZone2001", "simd2012_inc_rate", "simd2012_inc_dep_N"
,"simd2012_inc_rank")
)
View(income)
income$incomquin<-quantcut(income$simd2012_inc_rank, 5)
View(income)
outlets<-read.csv("C:/Users/mcherrie/Downloads/outlets_LR.csv")
names(income)
names(outlets)
outlets<-read.csv("C:/Users/mcherrie/Downloads/outlets_LR.csv")
outletsincome<-merge(income, outlets, by.x="DataZone2001")
View(outletsincome)
write.csv(":/Users/mcherrie/Downloads/masterincomeoutlets.csv")
write.csv(outletsincome,"C:/Users/mcherrie/Downloads/masterincomeoutlets.csv")
runApp('C:/Users/mcherrie/Google Drive/ProjectFiles/CRESHwebmap/alcoholtobacco')
